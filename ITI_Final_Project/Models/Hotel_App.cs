// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ITI_Final_Project.Models
{
    public partial class Hotel_App : DbContext
    {
        public Hotel_App()
        {
        }

        public Hotel_App(DbContextOptions<Hotel_App> options)
            : base(options)
        {
        }

        public virtual DbSet<Buy> Buys { get; set; }
        public virtual DbSet<Cleaner> Cleaners { get; set; }
        public virtual DbSet<Contact_U> Contact_Us { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Food> Foods { get; set; }
        public virtual DbSet<Nationalty> Nationalties { get; set; }
        public virtual DbSet<Reception> Receptions { get; set; }
        public virtual DbSet<Revevarstion> Revevarstions { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=MOHAMMED\\SQLEXPRESS;Initial Catalog=ITI_Final_Project;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Buy>(entity =>
            {
                entity.Property(e => e.Customer_Id).ValueGeneratedNever();

                entity.HasOne(d => d.Customer)
                    .WithOne(p => p.Buy)
                    .HasForeignKey<Buy>(d => d.Customer_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Buy_Buy");

                entity.HasOne(d => d.Food)
                    .WithMany(p => p.Buys)
                    .HasForeignKey(d => d.Food_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Buy_Food");
            });

            modelBuilder.Entity<Contact_U>(entity =>
            {
                entity.HasOne(d => d.Customer)
                    .WithMany(p => p.Contact_Us)
                    .HasForeignKey(d => d.Customer_Id)
                    .HasConstraintName("FK_Contact_Us_Customers");
            });

            modelBuilder.Entity<Customer>(entity =>
            {
                entity.HasOne(d => d.National)
                    .WithMany(p => p.Customers)
                    .HasForeignKey(d => d.National_Id)
                    .HasConstraintName("FK_Customers_Nationalty");

                entity.HasOne(d => d.Reception)
                    .WithMany(p => p.Customers)
                    .HasForeignKey(d => d.Reception_Id)
                    .HasConstraintName("FK_Customers_Reception");
            });

            modelBuilder.Entity<Revevarstion>(entity =>
            {
                entity.HasOne(d => d.Customer)
                    .WithMany(p => p.Revevarstions)
                    .HasForeignKey(d => d.Customer_Id)
                    .HasConstraintName("FK_Revevarstion_Customers1");

                entity.HasOne(d => d.Room_NumberNavigation)
                    .WithMany(p => p.Revevarstions)
                    .HasForeignKey(d => d.Room_Number)
                    .HasConstraintName("FK_Revevarstion_Room");
            });

            modelBuilder.Entity<Room>(entity =>
            {
                entity.HasOne(d => d.Cleaner)
                    .WithMany(p => p.Rooms)
                    .HasForeignKey(d => d.Cleaner_Id)
                    .HasConstraintName("FK_Room_Cleaners");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}